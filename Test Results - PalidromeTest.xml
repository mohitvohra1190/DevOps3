<?xml version="1.0" encoding="UTF-8"?><testrun duration="14" footerText="Generated by IntelliJ IDEA on 02-02-20 12:59" name="PalidromeTest">
    <count name="total" value="3"/>
    <count name="failed" value="1"/>
    <count name="passed" value="2"/>
    <config nameIsGenerated="true" configId="JUnit" name="PalidromeTest">
        <module name="DevOps2"/>
        <option name="PACKAGE_NAME" value=""/>
        <option name="MAIN_CLASS_NAME" value="PalidromeTest"/>
        <option name="TEST_OBJECT" value="class"/>
    </config>
    <suite duration="14" locationUrl="java:suite://PalidromeTest" name="PalidromeTest" status="failed">
        <test duration="7" locationUrl="java:test://PalidromeTest/testCheckPalidrome3" name="testCheckPalidrome3" status="passed">
            <output type="stdout"/>
        </test>
        <test duration="6" locationUrl="java:test://PalidromeTest/testCheckPalidrome2" name="testCheckPalidrome2" status="failed">
            <output type="stdout"/>
            <output type="stderr">junit.framework.AssertionFailedError: expected:&amp;lt;true&amp;gt; but was:&amp;lt;false&amp;gt;
&#13;
	at junit.framework.Assert.fail(Assert.java:47)&#13;
	at junit.framework.Assert.failNotEquals(Assert.java:280)&#13;
	at junit.framework.Assert.assertEquals(Assert.java:64)&#13;
	at junit.framework.Assert.assertEquals(Assert.java:146)&#13;
	at junit.framework.Assert.assertEquals(Assert.java:152)&#13;
	at PalidromeTest.testCheckPalidrome2(PalidromeTest.java:18)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:498)&#13;
	at junit.framework.TestCase.runTest(TestCase.java:164)&#13;
	at junit.framework.TestCase.runBare(TestCase.java:130)&#13;
	at junit.framework.TestResult$1.protect(TestResult.java:106)&#13;
	at junit.framework.TestResult.runProtected(TestResult.java:124)&#13;
	at junit.framework.TestResult.run(TestResult.java:109)&#13;
	at junit.framework.TestCase.run(TestCase.java:120)&#13;
	at junit.framework.TestSuite.runTest(TestSuite.java:230)&#13;
	at junit.framework.TestSuite.run(TestSuite.java:225)&#13;
	at junit.textui.TestRunner.doRun(TestRunner.java:121)&#13;
	at com.intellij.junit3.JUnit3IdeaTestRunner.doRun(JUnit3IdeaTestRunner.java:115)&#13;
	at junit.textui.TestRunner.doRun(TestRunner.java:114)&#13;
	at com.intellij.junit3.JUnit3IdeaTestRunner.startRunnerWithArgs(JUnit3IdeaTestRunner.java:47)&#13;
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)&#13;
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:230)&#13;
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:58)&#13;
</output>
        </test>
        <test duration="1" locationUrl="java:test://PalidromeTest/testCheckPalidrome1" name="testCheckPalidrome1" status="passed">
            <output type="stdout"/>
        </test>
    </suite>
</testrun>
